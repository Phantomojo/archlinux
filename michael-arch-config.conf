# Arch Linux Automated Installer Configuration for Michael
# Optimized for: Intel i7-12700H + RTX 3050 Ti Mobile + 1TB NVMe

# =============================================================================
# TARGET DISK CONFIGURATION
# =============================================================================
TARGET_DISK="/dev/nvme1n1"

# =============================================================================
# SYSTEM IDENTIFICATION
# =============================================================================
HOSTNAME="michael-arch"
USERNAME="michael"
USER_PASSWORD="ArchLinux2024!"
ROOT_PASSWORD="RootSecure2024!"
TIMEZONE="America/New_York"
LOCALE="en_US.UTF-8"
KEYMAP="us"
SHELL="/bin/zsh"  # Use zsh like Ubuntu setup

# =============================================================================
# DESKTOP ENVIRONMENT & WINDOW MANAGER
# =============================================================================
DESKTOP_ENVIRONMENT="i3"
# i3-specific packages will be installed automatically

# =============================================================================
# AUR HELPER
# =============================================================================
INSTALL_AUR_HELPER="paru"

# =============================================================================
# ESSENTIAL PACKAGES (as requested)
# =============================================================================
BASE_PACKAGES="base linux linux-firmware sudo vim nano networkmanager base-devel git python python-pip docker docker-compose zsh"

# =============================================================================
# USER GROUPS (matching Ubuntu setup)
# =============================================================================
USER_GROUPS="wheel adm cdrom sudo dip plugdev users lpadmin docker wireshark libvirt"

# =============================================================================
# ADVANCED PACKAGE SELECTION (optimized for your hardware)
# =============================================================================

# NVIDIA Drivers (RTX 3050 Ti Mobile - Optimus setup)
NVIDIA_PACKAGES="nvidia nvidia-utils nvidia-settings nvidia-prime"

# Intel Graphics (Iris Xe - for hybrid graphics)
INTEL_PACKAGES="mesa lib32-mesa vulkan-intel lib32-vulkan-intel intel-media-sdk"

# i3 Window Manager + Essential Tools
I3_PACKAGES="i3-wm i3status i3lock dmenu rofi feh picom alacritty"

# Development Tools (enhanced for your setup)
DEV_PACKAGES="git base-devel python python-pip nodejs npm rust go docker docker-compose podman"

# System Utilities (commonly forgotten but essential)
SYSTEM_PACKAGES="htop neofetch tree wget curl unzip zip p7zip rsync openssh ufw firewalld"

# Audio/Video (for RTX 3050 Ti capabilities)
MEDIA_PACKAGES="ffmpeg vlc mpv gstreamer gst-plugins-good gst-plugins-bad gst-plugins-ugly"

# Network Tools
NETWORK_PACKAGES="wireshark-cli nmap netcat-openbsd tcpdump"

# Virtualization Tools (matching Ubuntu setup)
VIRT_PACKAGES="libvirt qemu virt-manager virt-viewer"

# Additional Development Tools
EXTRA_DEV_PACKAGES="ollama-bin"  # AI/ML tool

# Additional packages
ADDITIONAL_PACKAGES="$NVIDIA_PACKAGES $INTEL_PACKAGES $I3_PACKAGES $DEV_PACKAGES $SYSTEM_PACKAGES $MEDIA_PACKAGES $NETWORK_PACKAGES $VIRT_PACKAGES $EXTRA_DEV_PACKAGES"

# =============================================================================
# SERVICES TO ENABLE
# =============================================================================
ENABLE_SERVICES="NetworkManager docker sshd"

# =============================================================================
# BOOTLOADER
# =============================================================================
BOOTLOADER="systemd-boot"

# =============================================================================
# PARTITION LAYOUT (LUKS + LVM + Warehouse)
# =============================================================================
# EFI System Partition
EFI_SIZE="512M"

# LUKS-encrypted LVM setup
LUKS_ENABLE="true"
LUKS_PASSWORD="LUKSEncrypt2024!"
LVM_ENABLE="true"

# LVM Volume Groups and Logical Volumes
LVM_VG_NAME="arch-vg"
LVM_ROOT_SIZE="100G"        # 100GB encrypted root as requested
LVM_SWAP_SIZE="8G"          # 8GB swap (optimized for 20-thread CPU)

# Warehouse partition (unencrypted, accessible from Ubuntu)
WAREHOUSE_ENABLE="true"
WAREHOUSE_SIZE=""           # Empty = use remaining space (~845GB)

# =============================================================================
# POST-INSTALLATION CONFIGURATIONS
# =============================================================================

# Cursor IDE Installation (post-base)
INSTALL_CURSOR="true"

# NVIDIA Optimus Configuration
CONFIGURE_OPTIMUS="true"

# Docker Configuration
CONFIGURE_DOCKER="true"
DOCKER_USER="michael"

# SSH Configuration
CONFIGURE_SSH="true"
SSH_PORT="22"

# Firewall Configuration
CONFIGURE_FIREWALL="true"

# =============================================================================
# ADVANCED SYSTEM OPTIMIZATIONS
# =============================================================================

# CPU Optimizations (Intel i7-12700H)
CPU_GOVERNOR="performance"
CPU_MICROCODE="intel-ucode"

# Memory Optimizations
SWAPPINESS="10"
VFS_CACHE_PRESSURE="50"

# I/O Optimizations (NVMe SSD)
IO_SCHEDULER="mq-deadline"
DISK_SCHEDULER="none"

# =============================================================================
# SECURITY HARDENING
# =============================================================================
SECURITY_HARDENING="true"
AUTO_UPDATES="true"
FIREWALL_DEFAULT_DENY="true"

# =============================================================================
# CUSTOMIZATION
# =============================================================================
# Dotfiles repository (if you have one)
DOTFILES_REPO=""
DOTFILES_BRANCH="main"

# Custom scripts to run post-installation
POST_INSTALL_SCRIPTS=""
